server {
    listen            ${NGINX_PORT};
    listen       [::]:${NGINX_PORT};
    server_name  localhost;
    rewrite_log     on;
    access_log  /var/log/nginx/access.log;
    error_log  /var/log/nginx/error.log notice;

    # Enable browser caching for nginx, it caches all the formats mentioned
    location ~* \.(js|css|png|jpg|jpeg|gif|ico)$ {
        # proxy_set_header Host $host;
        gzip_static on;
        root   /usr/share/nginx/html;
        index  index.html index.htm;
        try_files $uri $uri/ =404;
        expires 5d;
        log_not_found off;
    }

    # serve front-end app
    location / {
        gzip_static on;
        root   /usr/share/nginx/html;
        index  index.html index.htm;
        try_files $uri $uri/ /index.html?$args;
    }

    # redirect requests to /api slug to REST API
    location /api {
      rewrite ^/api(/.*)$ $1 break;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-NginX-Proxy true;
      proxy_set_header X-WEBAUTH-USER  $remote_user;
      proxy_pass ${SECURE_GW_ENDPOINT};
      # proxy_set_header Host $host;
      proxy_cache_bypass $http_upgrade;
      proxy_redirect off;
    }

    # redirect requests to /iam slug to keycloak
    location /iam {
      rewrite ^/iam(/.*)$ $1 break;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-NginX-Proxy true;
      proxy_set_header X-WEBAUTH-USER  $remote_user;
      proxy_pass ${SSO_URL};
      # proxy_set_header Host $host;
      proxy_cache_bypass $http_upgrade;
      proxy_redirect off;
    }

    # redirect server error pages to the static page /50x.html
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }
}
